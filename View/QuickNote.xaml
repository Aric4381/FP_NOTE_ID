<Page x:Class="NOTE_ID.View.QuickNote"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:NOTE_ID.View"
      mc:Ignorable="d" 
      d:DesignHeight="764" d:DesignWidth="1000"
      Title="QuickNote">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#fe8d6f"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#fe8d6f"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#fe8d6f"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#fe8d6f"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="save" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                CornerRadius="5"
                                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Content="Quick Note"
               Margin="20,0,0,0"
               FontSize="20"
               FontWeight="Bold"
               VerticalAlignment="Center"/>
        <Border Grid.Row="1"
                CornerRadius="16"
                VerticalAlignment="Stretch"
                Background="#E5B04A"
                Margin="20">
            <Grid Margin="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <Grid>
                    <TextBlock Text="Title"
                               FontSize="32">

                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding= "{Binding Text, ElementName=Title}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden" />
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox FontSize="32"
                             Name="Title"
                             VerticalAlignment="Stretch"
                             Background="Transparent"
                             BorderThickness="0" />
                </Grid>

                <Grid Grid.Row="1">
                    <TextBlock Text="ur note"
                               FontSize="16">

                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=Text}"
                                                 Value="">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility"
                                        Value="Hidden" />
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox Grid.Row="1"
                             Name="Text"
                             FontSize="16"
                             VerticalAlignment="Stretch"
                             Background="Transparent"
                             BorderThickness="0"
                             AcceptsReturn="True"
                             TextWrapping="Wrap" />
                </Grid>
                

                <Button Style="{DynamicResource save}" Name="SaveButton"
                        Grid.Row="2"
                        Height="30"
                        Width="90"
                        Foreground="White"
                        Background="#fe8d6f"
                        HorizontalAlignment="Right"
                        Content="Save"
                        FontFamily="Inter"
                        FontSize="14"
                        Margin="10"
                        Click="SaveButton_Click" 
                        FontWeight="Bold" BorderBrush="{x:Null}"/>

            </Grid>
        </Border>

    </Grid>
</Page>
